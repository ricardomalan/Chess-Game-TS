{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["Chess","require","App","useState","chess","fen","setFen","className","width","position","onDrop","move","setTimeout","moves","length","computerMove","Math","floor","random","handleMove","from","sourceSquare","to","targetSquare","promotion","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAKMA,EAAQC,EAAQ,IA2CPC,EAzCO,WAAO,IAAD,EACVC,mBACd,IAAIH,EAAM,6DADLI,EADmB,sBAKJD,mBAASC,EAAMC,OALX,mBAKnBA,EALmB,KAKdC,EALc,KAuB1B,OACE,sBAAKC,UAAU,cAAf,UACE,4CACA,cAAC,IAAD,CACEC,MAAO,IACPC,SAAUJ,EACVK,OAAQ,SAACC,GAAD,OAtBK,SAACA,GACdP,EAAMO,KAAKA,KACbC,YAAW,WACT,IAAMC,EAAQT,EAAMS,QAEpB,GAAIA,EAAMC,OAAS,EAAG,CACpB,IAAMC,EAAeF,EAAMG,KAAKC,MAAMD,KAAKE,SAAWL,EAAMC,SAC5DV,EAAMO,KAAKI,GACXT,EAAOF,EAAMC,UAEd,KAEHC,EAAOF,EAAMC,QAWTc,CAAW,CACTC,KAAMT,EAAKU,aACXC,GAAIX,EAAKY,aACTC,UAAW,aC1BRC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a9f4c6ca.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Chessboard from \"chessboardjsx\";\nimport { ChessInstance, ShortMove } from \"chess.js\";\n\nconst Chess = require(\"chess.js\");\n\nconst App: React.FC = () => {\n  const [chess] = useState<ChessInstance>(\n    new Chess(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\")\n  );\n\n  const [fen, setFen] = useState(chess.fen());\n\n  const handleMove = (move: ShortMove) => {\n    if (chess.move(move)) {\n      setTimeout(() => {\n        const moves = chess.moves();\n\n        if (moves.length > 0) {\n          const computerMove = moves[Math.floor(Math.random() * moves.length)];\n          chess.move(computerMove);\n          setFen(chess.fen());\n        }\n      }, 300);\n\n      setFen(chess.fen());\n    }\n  };\n\n  return (\n    <div className=\"flex-center\">\n      <h1>Chess Game</h1>\n      <Chessboard\n        width={400}\n        position={fen}\n        onDrop={(move) =>\n          handleMove({\n            from: move.sourceSquare,\n            to: move.targetSquare,\n            promotion: \"q\",\n          })\n        }\n      />\n    </div>\n  );\n};\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}